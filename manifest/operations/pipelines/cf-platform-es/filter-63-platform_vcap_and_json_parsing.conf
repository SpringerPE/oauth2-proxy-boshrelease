##------------------------------------------
# Vcap conf. Parses vcap* logs. (after UAA!)
##------------------------------------------

filter {
    if [@source][component] =~ /vcap\..*/ {
        # minus vcap. prefix
        mutate {
          gsub => ["[@source][component]", "^vcap\.", ""]
        }
        mutate {
          replace => { "@type" => "vcap" }
          add_tag => "vcap"
        }
        # Parse Cloud Foundry logs
        if [@message] =~ /^\s*{".*}\s*$/ { # looks like JSON
            # parse JSON message
            json {
              source => "@message"
              target => "parsed_json_field"
              remove_field => [ "@message" ]
              add_field => { "parsed_json_field_name" => "%{[@source][component]}"}
            }
            if "_jsonparsefailure" in [tags] {
                # Amend the failure tag to match our fail/${addon}/${filter}/${detail} standard
                mutate {
                  add_tag => ["fail/cloudfoundry/platform-vcap/json"]
                  remove_tag => ["_jsonparsefailure"]
                }
            } else {
                mutate {
                  rename => { "[parsed_json_field][message]" => "@message" } # @message
                }
                # @level
                translate {
                  field => "[parsed_json_field][log_level]"
                  dictionary => [ "0", "DEBUG", "1", "INFO", "2", "ERROR", "3", "FATAL" ]
                  destination => "@level"
                  override => true
                  fallback => "%{[parsed_json_field][log_level]}"
                  remove_field => "[parsed_json_field][log_level]"
                }
            }
        }
    }
}
